{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseURL","obj","getAll","axios","get","then","response","data","create","newObject","post","remove","id","delete","update","put","Person","person","click","name","number","onClick","Persons","props","filteredPersons","persons","filter","toLowerCase","includes","map","window","confirm","personsService","setPersons","p","handleDelete","PersonNameFilter","text","value","onChange","PersonAddNew","onSubmit","submit","state","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","status","className","App","useState","setNewName","setNewNumber","filterValue","setFilterValue","notification","setNotification","notificationStatus","setNotificationStatus","useEffect","initialPersons","e","target","preventDefault","currentPerson","some","returnedPerson","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6d483d0.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// backend on localhost\r\n// const baseURL = 'http://localhost:3005/api/persons';\r\n// backend on Heroku\r\n// const baseURL = 'https://evening-eyrie-68904.herokuapp.com/api/persons';\r\n// relative address\r\nconst baseURL = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseURL, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = id => {\r\n  axios.delete(`${baseURL}/${id}`);\r\n\r\n  // return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst obj = { getAll, create, remove, update };\r\n\r\nexport default obj;\r\n","import React, { useState, useEffect } from 'react';\nimport personsService from './services/persons';\n\nconst Person = ({ person, click }) => {\n  return (\n    <div>\n      {person.name} {person.number} <button onClick={click}>delete</button>\n    </div>\n  );\n};\n\nconst Persons = props => {\n  const filteredPersons = props.persons.filter(person =>\n    person.name.toLowerCase().includes(props.filter)\n  );\n\n  const handleDelete = person => {\n    const result = window.confirm(`Are you sure to delete ${person.name}?`);\n    if (result) {\n      personsService.remove(person.id);\n      props.setPersons(filteredPersons.filter(p => p.id !== person.id));\n    }\n  };\n\n  return filteredPersons.map(person => (\n    <Person\n      key={person.name}\n      person={person}\n      click={() => handleDelete(person)}\n    />\n  ));\n};\n\nconst PersonNameFilter = props => {\n  return (\n    <>\n      <div>\n        {props.text}\n        <input value={props.value} onChange={props.onChange} />\n      </div>\n    </>\n  );\n};\n\nconst PersonAddNew = props => {\n  return (\n    <form onSubmit={props.submit}>\n      <div>\n        <div>\n          name:{' '}\n          <input\n            value={props.state.newName}\n            onChange={props.state.handleNameChange}\n          />\n        </div>\n        <div>\n          number:{' '}\n          <input\n            value={props.state.newNumber}\n            onChange={props.state.handleNumberChange}\n          />\n        </div>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst Notification = ({ message, status }) => {\n  if (status === 'success') {\n    return <div className=\"notification\">{message}</div>;\n  }\n  if (status === 'error') {\n    return <div className=\"error\">{message}</div>;\n  }\n  return null;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filterValue, setFilterValue] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [notificationStatus, setNotificationStatus] = useState(null);\n\n  useEffect(() => {\n    personsService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const addPerson = e => {\n    e.preventDefault();\n    let currentPerson = null;\n\n    //check whether the array already happens to include the same name\n    if (persons.some(person => person.name === newName)) {\n      const result = window.confirm(\n        `${newName} has already been added to the phonebook, replace the old number with the new one?`\n      );\n      if (result) {\n        currentPerson = persons.filter(person => person.name === newName);\n      } else return;\n    }\n\n    const newObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    // update the contact if the array already includes the name\n    if (currentPerson) {\n      personsService\n        .update(currentPerson[0].id, newObject)\n        .then(returnedPerson => {\n          setPersons(\n            persons.map(person =>\n              person.id !== returnedPerson.id ? person : returnedPerson\n            )\n          );\n          setNotificationStatus('success');\n          setNotification(`Number changed for ${returnedPerson.name}`);\n          setTimeout(() => {\n            setNotificationStatus(null);\n            setNotification(null);\n          }, 3500);\n        })\n        .catch(error => {\n          setNotificationStatus('error');\n          if (error.response.status === 404) {\n            setNotification(\n              `Contact ${currentPerson[0].name} has already been removed from the server.`\n            );\n            setPersons(persons.filter(p => p.id !== currentPerson[0].id));\n          } else {\n            setNotification(error.response.data.error);\n          }\n          setTimeout(() => {\n            setNotificationStatus(null);\n            setNotification(null);\n          }, 5000);\n        });\n    }\n\n    // adding a new contact\n    if (!currentPerson) {\n      personsService\n        .create(newObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson));\n          setNotificationStatus('success');\n          setNotification(`Added ${returnedPerson.name}`);\n          setTimeout(() => {\n            setNotificationStatus(null);\n            setNotification(null);\n          }, 3500);\n        })\n        .catch(error => {\n          setNotificationStatus('error');\n          setNotification(error.response.data.error);\n          setTimeout(() => {\n            setNotificationStatus(null);\n            setNotification(null);\n          }, 5000);\n        });\n    }\n\n    // erasing to initial empty state\n    setNewName('');\n    setNewNumber('');\n  };\n\n  const handleNameChange = e => {\n    setNewName(e.target.value);\n  };\n  const handleNumberChange = e => {\n    setNewNumber(e.target.value);\n  };\n  const handleFilterChange = e => {\n    setFilterValue(e.target.value);\n  };\n\n  const state = {\n    newName: newName,\n    handleNameChange: handleNameChange,\n    newNumber: newNumber,\n    handleNumberChange: handleNumberChange,\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} status={notificationStatus} />\n      <PersonNameFilter\n        value={filterValue}\n        onChange={handleFilterChange}\n        text=\"filter name by: \"\n      />\n      <h2>Add a new contact</h2>\n      <PersonAddNew submit={addPerson} state={state} />\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filterValue} setPersons={setPersons} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}